/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package behavior.pathfinder.sojevent;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class SojEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SojEvent\",\"namespace\":\"behavior.pathfinder.sojevent\",\"fields\":[{\"name\":\"rheosHeader\",\"type\":{\"type\":\"record\",\"name\":\"RheosHeader\",\"fields\":[{\"name\":\"eventCreateTimestamp\",\"type\":\"long\"},{\"name\":\"eventSentTimestamp\",\"type\":\"long\"},{\"name\":\"schemaId\",\"type\":\"int\"},{\"name\":\"eventId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"producerId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]},\"doc\":\"Rheos header\"},{\"name\":\"sojA\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"},\"doc\":\"SOJ 'a' payload of key-value pairs as a map<string,string>\"},{\"name\":\"sojK\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"},\"doc\":\"SOJ 'k' payload of key-value pairs as a map<string,string>\"},{\"name\":\"sojC\",\"type\":[\"null\",{\"type\":\"map\",\"values\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"}],\"doc\":\"SOJ 'c' payload of key-value pairs as a map<string,string>\",\"default\":null},{\"name\":\"clientData\",\"type\":{\"type\":\"record\",\"name\":\"ClientData\",\"fields\":[{\"name\":\"ForwardFor\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Read from X-FORWARDED-FOR header\",\"avro.java.string\":\"String\"},{\"name\":\"Script\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Servlet path for the request\",\"avro.java.string\":\"String\"},{\"name\":\"Server\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Domain name, part of the applicationURL value of X-EBAY-C-ENDUSERCTX\",\"avro.java.string\":\"String\"},{\"name\":\"TMachine\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Host IP of the machine which is producing this event\",\"avro.java.string\":\"String\"},{\"name\":\"TStamp\",\"type\":[\"null\",\"long\"],\"doc\":\"Timestamp of the event\"},{\"name\":\"TName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"CAL transaction name\",\"avro.java.string\":\"String\"},{\"name\":\"TPayload\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Deprecated. Only here for backward/forward compatibility\",\"avro.java.string\":\"String\"},{\"name\":\"colo\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"colo name for the event producer machine\",\"default\":null,\"avro.java.string\":\"String\"},{\"name\":\"pool\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Pool name\",\"default\":null,\"avro.java.string\":\"String\"},{\"name\":\"agent\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"User agent read from X-EBAY-C-ENDUSERCTX\",\"default\":null,\"avro.java.string\":\"String\"},{\"name\":\"remoteIP\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"client machine IP read from X-EBAY-C-ENDUSERCTX\",\"default\":null,\"avro.java.string\":\"String\"},{\"name\":\"TType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"CAL transaction type\",\"default\":null,\"avro.java.string\":\"String\"},{\"name\":\"TStatus\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"CAL transaction status\",\"default\":null,\"avro.java.string\":\"String\"},{\"name\":\"corrId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Request correlation Id\",\"default\":null,\"avro.java.string\":\"String\"},{\"name\":\"contentLength\",\"type\":[\"null\",\"int\"],\"doc\":\"httprequest content length\",\"default\":null,\"avro.java.string\":\"String\"},{\"name\":\"nodeId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"raptor node id\",\"default\":null,\"avro.java.string\":\"String\"},{\"name\":\"requestGuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Ginger request GUID\",\"default\":null,\"avro.java.string\":\"String\"},{\"name\":\"urlQueryString\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"url query string read from applicationURL of X-EBAY-C-ENDUSERCTX\",\"default\":null,\"avro.java.string\":\"String\"},{\"name\":\"referrer\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"referrer read from X-EBAY-C-ENDUSERCTX\",\"default\":null,\"avro.java.string\":\"String\"},{\"name\":\"rlogid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"CAL request log id\",\"default\":null,\"avro.java.string\":\"String\"},{\"name\":\"acceptEncoding\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Http request accept encoding\",\"default\":null,\"avro.java.string\":\"String\"},{\"name\":\"TDuration\",\"type\":[\"null\",\"long\"],\"doc\":\"Approximate URL time in milli secs\",\"default\":null}]},\"doc\":\"Includes ForwardFor, Script, Server, TMachine, TStamp, TName, TPayload, colo, pool, agent, remoteIP, TType, TStatus, corrId, contentLength, nodeId, requestGuid, urlQueryString, referrer, rlogid, acceptEncoding, TDuration\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Rheos header */
  @Deprecated public behavior.pathfinder.sojevent.RheosHeader rheosHeader;
  /** SOJ 'a' payload of key-value pairs as a map<string,string> */
  @Deprecated public java.util.Map<java.lang.String,java.lang.String> sojA;
  /** SOJ 'k' payload of key-value pairs as a map<string,string> */
  @Deprecated public java.util.Map<java.lang.String,java.lang.String> sojK;
  /** SOJ 'c' payload of key-value pairs as a map<string,string> */
  @Deprecated public java.util.Map<java.lang.String,java.lang.String> sojC;
  /** Includes ForwardFor, Script, Server, TMachine, TStamp, TName, TPayload, colo, pool, agent, remoteIP, TType, TStatus, corrId, contentLength, nodeId, requestGuid, urlQueryString, referrer, rlogid, acceptEncoding, TDuration */
  @Deprecated public behavior.pathfinder.sojevent.ClientData clientData;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public SojEvent() {}

  /**
   * All-args constructor.
   */
  public SojEvent(behavior.pathfinder.sojevent.RheosHeader rheosHeader, java.util.Map<java.lang.String,java.lang.String> sojA, java.util.Map<java.lang.String,java.lang.String> sojK, java.util.Map<java.lang.String,java.lang.String> sojC, behavior.pathfinder.sojevent.ClientData clientData) {
    this.rheosHeader = rheosHeader;
    this.sojA = sojA;
    this.sojK = sojK;
    this.sojC = sojC;
    this.clientData = clientData;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return rheosHeader;
    case 1: return sojA;
    case 2: return sojK;
    case 3: return sojC;
    case 4: return clientData;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: rheosHeader = (behavior.pathfinder.sojevent.RheosHeader)value$; break;
    case 1: sojA = (java.util.Map<java.lang.String,java.lang.String>)value$; break;
    case 2: sojK = (java.util.Map<java.lang.String,java.lang.String>)value$; break;
    case 3: sojC = (java.util.Map<java.lang.String,java.lang.String>)value$; break;
    case 4: clientData = (behavior.pathfinder.sojevent.ClientData)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'rheosHeader' field.
   * Rheos header   */
  public behavior.pathfinder.sojevent.RheosHeader getRheosHeader() {
    return rheosHeader;
  }

  /**
   * Sets the value of the 'rheosHeader' field.
   * Rheos header   * @param value the value to set.
   */
  public void setRheosHeader(behavior.pathfinder.sojevent.RheosHeader value) {
    this.rheosHeader = value;
  }

  /**
   * Gets the value of the 'sojA' field.
   * SOJ 'a' payload of key-value pairs as a map<string,string>   */
  public java.util.Map<java.lang.String,java.lang.String> getSojA() {
    return sojA;
  }

  /**
   * Sets the value of the 'sojA' field.
   * SOJ 'a' payload of key-value pairs as a map<string,string>   * @param value the value to set.
   */
  public void setSojA(java.util.Map<java.lang.String,java.lang.String> value) {
    this.sojA = value;
  }

  /**
   * Gets the value of the 'sojK' field.
   * SOJ 'k' payload of key-value pairs as a map<string,string>   */
  public java.util.Map<java.lang.String,java.lang.String> getSojK() {
    return sojK;
  }

  /**
   * Sets the value of the 'sojK' field.
   * SOJ 'k' payload of key-value pairs as a map<string,string>   * @param value the value to set.
   */
  public void setSojK(java.util.Map<java.lang.String,java.lang.String> value) {
    this.sojK = value;
  }

  /**
   * Gets the value of the 'sojC' field.
   * SOJ 'c' payload of key-value pairs as a map<string,string>   */
  public java.util.Map<java.lang.String,java.lang.String> getSojC() {
    return sojC;
  }

  /**
   * Sets the value of the 'sojC' field.
   * SOJ 'c' payload of key-value pairs as a map<string,string>   * @param value the value to set.
   */
  public void setSojC(java.util.Map<java.lang.String,java.lang.String> value) {
    this.sojC = value;
  }

  /**
   * Gets the value of the 'clientData' field.
   * Includes ForwardFor, Script, Server, TMachine, TStamp, TName, TPayload, colo, pool, agent, remoteIP, TType, TStatus, corrId, contentLength, nodeId, requestGuid, urlQueryString, referrer, rlogid, acceptEncoding, TDuration   */
  public behavior.pathfinder.sojevent.ClientData getClientData() {
    return clientData;
  }

  /**
   * Sets the value of the 'clientData' field.
   * Includes ForwardFor, Script, Server, TMachine, TStamp, TName, TPayload, colo, pool, agent, remoteIP, TType, TStatus, corrId, contentLength, nodeId, requestGuid, urlQueryString, referrer, rlogid, acceptEncoding, TDuration   * @param value the value to set.
   */
  public void setClientData(behavior.pathfinder.sojevent.ClientData value) {
    this.clientData = value;
  }

  /** Creates a new SojEvent RecordBuilder */
  public static behavior.pathfinder.sojevent.SojEvent.Builder newBuilder() {
    return new behavior.pathfinder.sojevent.SojEvent.Builder();
  }
  
  /** Creates a new SojEvent RecordBuilder by copying an existing Builder */
  public static behavior.pathfinder.sojevent.SojEvent.Builder newBuilder(behavior.pathfinder.sojevent.SojEvent.Builder other) {
    return new behavior.pathfinder.sojevent.SojEvent.Builder(other);
  }
  
  /** Creates a new SojEvent RecordBuilder by copying an existing SojEvent instance */
  public static behavior.pathfinder.sojevent.SojEvent.Builder newBuilder(behavior.pathfinder.sojevent.SojEvent other) {
    return new behavior.pathfinder.sojevent.SojEvent.Builder(other);
  }
  
  /**
   * RecordBuilder for SojEvent instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SojEvent>
    implements org.apache.avro.data.RecordBuilder<SojEvent> {

    private behavior.pathfinder.sojevent.RheosHeader rheosHeader;
    private java.util.Map<java.lang.String,java.lang.String> sojA;
    private java.util.Map<java.lang.String,java.lang.String> sojK;
    private java.util.Map<java.lang.String,java.lang.String> sojC;
    private behavior.pathfinder.sojevent.ClientData clientData;

    /** Creates a new Builder */
    private Builder() {
      super(behavior.pathfinder.sojevent.SojEvent.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(behavior.pathfinder.sojevent.SojEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.rheosHeader)) {
        this.rheosHeader = data().deepCopy(fields()[0].schema(), other.rheosHeader);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.sojA)) {
        this.sojA = data().deepCopy(fields()[1].schema(), other.sojA);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.sojK)) {
        this.sojK = data().deepCopy(fields()[2].schema(), other.sojK);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.sojC)) {
        this.sojC = data().deepCopy(fields()[3].schema(), other.sojC);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.clientData)) {
        this.clientData = data().deepCopy(fields()[4].schema(), other.clientData);
        fieldSetFlags()[4] = true;
      }
    }
    
    /** Creates a Builder by copying an existing SojEvent instance */
    private Builder(behavior.pathfinder.sojevent.SojEvent other) {
            super(behavior.pathfinder.sojevent.SojEvent.SCHEMA$);
      if (isValidValue(fields()[0], other.rheosHeader)) {
        this.rheosHeader = data().deepCopy(fields()[0].schema(), other.rheosHeader);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.sojA)) {
        this.sojA = data().deepCopy(fields()[1].schema(), other.sojA);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.sojK)) {
        this.sojK = data().deepCopy(fields()[2].schema(), other.sojK);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.sojC)) {
        this.sojC = data().deepCopy(fields()[3].schema(), other.sojC);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.clientData)) {
        this.clientData = data().deepCopy(fields()[4].schema(), other.clientData);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'rheosHeader' field */
    public behavior.pathfinder.sojevent.RheosHeader getRheosHeader() {
      return rheosHeader;
    }
    
    /** Sets the value of the 'rheosHeader' field */
    public behavior.pathfinder.sojevent.SojEvent.Builder setRheosHeader(behavior.pathfinder.sojevent.RheosHeader value) {
      validate(fields()[0], value);
      this.rheosHeader = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'rheosHeader' field has been set */
    public boolean hasRheosHeader() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'rheosHeader' field */
    public behavior.pathfinder.sojevent.SojEvent.Builder clearRheosHeader() {
      rheosHeader = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'sojA' field */
    public java.util.Map<java.lang.String,java.lang.String> getSojA() {
      return sojA;
    }
    
    /** Sets the value of the 'sojA' field */
    public behavior.pathfinder.sojevent.SojEvent.Builder setSojA(java.util.Map<java.lang.String,java.lang.String> value) {
      validate(fields()[1], value);
      this.sojA = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'sojA' field has been set */
    public boolean hasSojA() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'sojA' field */
    public behavior.pathfinder.sojevent.SojEvent.Builder clearSojA() {
      sojA = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'sojK' field */
    public java.util.Map<java.lang.String,java.lang.String> getSojK() {
      return sojK;
    }
    
    /** Sets the value of the 'sojK' field */
    public behavior.pathfinder.sojevent.SojEvent.Builder setSojK(java.util.Map<java.lang.String,java.lang.String> value) {
      validate(fields()[2], value);
      this.sojK = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'sojK' field has been set */
    public boolean hasSojK() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'sojK' field */
    public behavior.pathfinder.sojevent.SojEvent.Builder clearSojK() {
      sojK = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'sojC' field */
    public java.util.Map<java.lang.String,java.lang.String> getSojC() {
      return sojC;
    }
    
    /** Sets the value of the 'sojC' field */
    public behavior.pathfinder.sojevent.SojEvent.Builder setSojC(java.util.Map<java.lang.String,java.lang.String> value) {
      validate(fields()[3], value);
      this.sojC = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'sojC' field has been set */
    public boolean hasSojC() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'sojC' field */
    public behavior.pathfinder.sojevent.SojEvent.Builder clearSojC() {
      sojC = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'clientData' field */
    public behavior.pathfinder.sojevent.ClientData getClientData() {
      return clientData;
    }
    
    /** Sets the value of the 'clientData' field */
    public behavior.pathfinder.sojevent.SojEvent.Builder setClientData(behavior.pathfinder.sojevent.ClientData value) {
      validate(fields()[4], value);
      this.clientData = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'clientData' field has been set */
    public boolean hasClientData() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'clientData' field */
    public behavior.pathfinder.sojevent.SojEvent.Builder clearClientData() {
      clientData = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public SojEvent build() {
      try {
        SojEvent record = new SojEvent();
        record.rheosHeader = fieldSetFlags()[0] ? this.rheosHeader : (behavior.pathfinder.sojevent.RheosHeader) defaultValue(fields()[0]);
        record.sojA = fieldSetFlags()[1] ? this.sojA : (java.util.Map<java.lang.String,java.lang.String>) defaultValue(fields()[1]);
        record.sojK = fieldSetFlags()[2] ? this.sojK : (java.util.Map<java.lang.String,java.lang.String>) defaultValue(fields()[2]);
        record.sojC = fieldSetFlags()[3] ? this.sojC : (java.util.Map<java.lang.String,java.lang.String>) defaultValue(fields()[3]);
        record.clientData = fieldSetFlags()[4] ? this.clientData : (behavior.pathfinder.sojevent.ClientData) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
