/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ebay.sojourner.ubd.common.model;

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class SessionCore extends org.apache.avro.specific.SpecificRecordBase implements
    org.apache.avro.specific.SpecificRecord {

  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse(
      "{\"type\":\"record\",\"name\":\"SessionCore\",\"namespace\":\"com.ebay.sojourner.ubd"
          + ".common.model\",\"fields\":[{\"name\":\"botFlag\",\"type\":\"int\"},"
          + "{\"name\":\"absEventCnt\",\"type\":\"int\"},{\"name\":\"flags\",\"type\":\"int\"},"
          + "{\"name\":\"distinctGuidsForSameAgentIp\",\"type\":\"int\"},{\"name\":\"userAgent\","
          + "\"type\":[\"null\",{\"type\":\"record\",\"name\":\"AgentHash\","
          + "\"fields\":[{\"name\":\"agentHash1\",\"type\":\"long\"},{\"name\":\"agentHash2\","
          + "\"type\":\"long\"}]}],\"default\":null},{\"name\":\"ip\",\"type\":[\"null\","
          + "\"int\"],\"default\":null},{\"name\":\"agentString\",\"type\":[\"null\","
          + "\"AgentHash\"],\"default\":null},{\"name\":\"agentStringAfterBase64\","
          + "\"type\":[\"null\",\"AgentHash\"],\"default\":null},{\"name\":\"exInternalIp\","
          + "\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"exInternalIpNonTrim\","
          + "\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"appId\","
          + "\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"cguid\","
          + "\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Guid\","
          + "\"fields\":[{\"name\":\"guid1\",\"type\":\"long\"},{\"name\":\"guid2\","
          + "\"type\":\"long\"}]}],\"default\":null},{\"name\":\"guid\",\"type\":[\"null\","
          + "\"Guid\"],\"default\":null},{\"name\":\"validPageCnt\",\"type\":[\"null\",\"int\"],"
          + "\"default\":null},{\"name\":\"sessionStartDt\",\"type\":[\"null\",\"long\"],"
          + "\"default\":null}]}");
  private static final long serialVersionUID = -2409686724673055295L;
  private static SpecificData MODEL$ = new SpecificData();
  private static final BinaryMessageEncoder<SessionCore> ENCODER =
      new BinaryMessageEncoder<SessionCore>(MODEL$, SCHEMA$);
  private static final BinaryMessageDecoder<SessionCore> DECODER =
      new BinaryMessageDecoder<SessionCore>(MODEL$, SCHEMA$);
  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<SessionCore>
      WRITER$ = (org.apache.avro.io.DatumWriter<SessionCore>) MODEL$.createDatumWriter(SCHEMA$);
  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<SessionCore>
      READER$ = (org.apache.avro.io.DatumReader<SessionCore>) MODEL$.createDatumReader(SCHEMA$);
  @Deprecated
  public int botFlag;
  @Deprecated
  public int absEventCnt;
  @Deprecated
  public int flags;
  @Deprecated
  public int distinctGuidsForSameAgentIp;
  @Deprecated
  public com.ebay.sojourner.ubd.common.model.AgentHash userAgent;
  @Deprecated
  public java.lang.Integer ip;
  @Deprecated
  public com.ebay.sojourner.ubd.common.model.AgentHash agentString;
  @Deprecated
  public com.ebay.sojourner.ubd.common.model.AgentHash agentStringAfterBase64;
  @Deprecated
  public java.lang.Integer exInternalIp;
  @Deprecated
  public java.lang.Integer exInternalIpNonTrim;
  @Deprecated
  public java.lang.Integer appId;
  @Deprecated
  public com.ebay.sojourner.ubd.common.model.Guid cguid;
  @Deprecated
  public com.ebay.sojourner.ubd.common.model.Guid guid;
  @Deprecated
  public java.lang.Integer validPageCnt;
  @Deprecated
  public java.lang.Long sessionStartDt;
  /**
   * Default constructor.  Note that this does not initialize fields to their default values from
   * the schema.  If that is desired then one should use <code>newBuilder()</code>.
   */
  public SessionCore() {
  }
  /**
   * All-args constructor.
   *
   * @param botFlag The new value for botFlag
   * @param absEventCnt The new value for absEventCnt
   * @param flags The new value for flags
   * @param distinctGuidsForSameAgentIp The new value for distinctGuidsForSameAgentIp
   * @param userAgent The new value for userAgent
   * @param ip The new value for ip
   * @param agentString The new value for agentString
   * @param agentStringAfterBase64 The new value for agentStringAfterBase64
   * @param exInternalIp The new value for exInternalIp
   * @param exInternalIpNonTrim The new value for exInternalIpNonTrim
   * @param appId The new value for appId
   * @param cguid The new value for cguid
   * @param guid The new value for guid
   * @param validPageCnt The new value for validPageCnt
   * @param sessionStartDt The new value for sessionStartDt
   */
  public SessionCore(java.lang.Integer botFlag, java.lang.Integer absEventCnt,
      java.lang.Integer flags, java.lang.Integer distinctGuidsForSameAgentIp,
      com.ebay.sojourner.ubd.common.model.AgentHash userAgent, java.lang.Integer ip,
      com.ebay.sojourner.ubd.common.model.AgentHash agentString,
      com.ebay.sojourner.ubd.common.model.AgentHash agentStringAfterBase64,
      java.lang.Integer exInternalIp, java.lang.Integer exInternalIpNonTrim,
      java.lang.Integer appId, com.ebay.sojourner.ubd.common.model.Guid cguid,
      com.ebay.sojourner.ubd.common.model.Guid guid, java.lang.Integer validPageCnt,
      java.lang.Long sessionStartDt) {
    this.botFlag = botFlag;
    this.absEventCnt = absEventCnt;
    this.flags = flags;
    this.distinctGuidsForSameAgentIp = distinctGuidsForSameAgentIp;
    this.userAgent = userAgent;
    this.ip = ip;
    this.agentString = agentString;
    this.agentStringAfterBase64 = agentStringAfterBase64;
    this.exInternalIp = exInternalIp;
    this.exInternalIpNonTrim = exInternalIpNonTrim;
    this.appId = appId;
    this.cguid = cguid;
    this.guid = guid;
    this.validPageCnt = validPageCnt;
    this.sessionStartDt = sessionStartDt;
  }

  public static org.apache.avro.Schema getClassSchema() {
    return SCHEMA$;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<SessionCore> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link
   * SchemaStore}.
   *
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<SessionCore> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<SessionCore>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Deserializes a SessionCore from a ByteBuffer.
   */
  public static SessionCore fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /**
   * Creates a new SessionCore RecordBuilder.
   *
   * @return A new SessionCore RecordBuilder
   */
  public static com.ebay.sojourner.ubd.common.model.SessionCore.Builder newBuilder() {
    return new com.ebay.sojourner.ubd.common.model.SessionCore.Builder();
  }

  /**
   * Creates a new SessionCore RecordBuilder by copying an existing Builder.
   *
   * @param other The existing builder to copy.
   * @return A new SessionCore RecordBuilder
   */
  public static com.ebay.sojourner.ubd.common.model.SessionCore.Builder newBuilder(
      com.ebay.sojourner.ubd.common.model.SessionCore.Builder other) {
    return new com.ebay.sojourner.ubd.common.model.SessionCore.Builder(other);
  }

  /**
   * Creates a new SessionCore RecordBuilder by copying an existing SessionCore instance.
   *
   * @param other The existing instance to copy.
   * @return A new SessionCore RecordBuilder
   */
  public static com.ebay.sojourner.ubd.common.model.SessionCore.Builder newBuilder(
      com.ebay.sojourner.ubd.common.model.SessionCore other) {
    return new com.ebay.sojourner.ubd.common.model.SessionCore.Builder(other);
  }

  /**
   * Serializes this SessionCore to a ByteBuffer.
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  public org.apache.avro.Schema getSchema() {
    return SCHEMA$;
  }

  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
      case 0:
        return botFlag;
      case 1:
        return absEventCnt;
      case 2:
        return flags;
      case 3:
        return distinctGuidsForSameAgentIp;
      case 4:
        return userAgent;
      case 5:
        return ip;
      case 6:
        return agentString;
      case 7:
        return agentStringAfterBase64;
      case 8:
        return exInternalIp;
      case 9:
        return exInternalIpNonTrim;
      case 10:
        return appId;
      case 11:
        return cguid;
      case 12:
        return guid;
      case 13:
        return validPageCnt;
      case 14:
        return sessionStartDt;
      default:
        throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value = "unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
      case 0:
        botFlag = (java.lang.Integer) value$;
        break;
      case 1:
        absEventCnt = (java.lang.Integer) value$;
        break;
      case 2:
        flags = (java.lang.Integer) value$;
        break;
      case 3:
        distinctGuidsForSameAgentIp = (java.lang.Integer) value$;
        break;
      case 4:
        userAgent = (com.ebay.sojourner.ubd.common.model.AgentHash) value$;
        break;
      case 5:
        ip = (java.lang.Integer) value$;
        break;
      case 6:
        agentString = (com.ebay.sojourner.ubd.common.model.AgentHash) value$;
        break;
      case 7:
        agentStringAfterBase64 = (com.ebay.sojourner.ubd.common.model.AgentHash) value$;
        break;
      case 8:
        exInternalIp = (java.lang.Integer) value$;
        break;
      case 9:
        exInternalIpNonTrim = (java.lang.Integer) value$;
        break;
      case 10:
        appId = (java.lang.Integer) value$;
        break;
      case 11:
        cguid = (com.ebay.sojourner.ubd.common.model.Guid) value$;
        break;
      case 12:
        guid = (com.ebay.sojourner.ubd.common.model.Guid) value$;
        break;
      case 13:
        validPageCnt = (java.lang.Integer) value$;
        break;
      case 14:
        sessionStartDt = (java.lang.Long) value$;
        break;
      default:
        throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'botFlag' field.
   *
   * @return The value of the 'botFlag' field.
   */
  public java.lang.Integer getBotFlag() {
    return botFlag;
  }

  /**
   * Sets the value of the 'botFlag' field.
   *
   * @param value the value to set.
   */
  public void setBotFlag(java.lang.Integer value) {
    this.botFlag = value;
  }

  /**
   * Gets the value of the 'absEventCnt' field.
   *
   * @return The value of the 'absEventCnt' field.
   */
  public java.lang.Integer getAbsEventCnt() {
    return absEventCnt;
  }

  /**
   * Sets the value of the 'absEventCnt' field.
   *
   * @param value the value to set.
   */
  public void setAbsEventCnt(java.lang.Integer value) {
    this.absEventCnt = value;
  }

  /**
   * Gets the value of the 'flags' field.
   *
   * @return The value of the 'flags' field.
   */
  public java.lang.Integer getFlags() {
    return flags;
  }

  /**
   * Sets the value of the 'flags' field.
   *
   * @param value the value to set.
   */
  public void setFlags(java.lang.Integer value) {
    this.flags = value;
  }

  /**
   * Gets the value of the 'distinctGuidsForSameAgentIp' field.
   *
   * @return The value of the 'distinctGuidsForSameAgentIp' field.
   */
  public java.lang.Integer getDistinctGuidsForSameAgentIp() {
    return distinctGuidsForSameAgentIp;
  }

  /**
   * Sets the value of the 'distinctGuidsForSameAgentIp' field.
   *
   * @param value the value to set.
   */
  public void setDistinctGuidsForSameAgentIp(java.lang.Integer value) {
    this.distinctGuidsForSameAgentIp = value;
  }

  /**
   * Gets the value of the 'userAgent' field.
   *
   * @return The value of the 'userAgent' field.
   */
  public com.ebay.sojourner.ubd.common.model.AgentHash getUserAgent() {
    return userAgent;
  }

  /**
   * Sets the value of the 'userAgent' field.
   *
   * @param value the value to set.
   */
  public void setUserAgent(com.ebay.sojourner.ubd.common.model.AgentHash value) {
    this.userAgent = value;
  }

  /**
   * Gets the value of the 'ip' field.
   *
   * @return The value of the 'ip' field.
   */
  public java.lang.Integer getIp() {
    return ip;
  }

  /**
   * Sets the value of the 'ip' field.
   *
   * @param value the value to set.
   */
  public void setIp(java.lang.Integer value) {
    this.ip = value;
  }

  /**
   * Gets the value of the 'agentString' field.
   *
   * @return The value of the 'agentString' field.
   */
  public com.ebay.sojourner.ubd.common.model.AgentHash getAgentString() {
    return agentString;
  }

  /**
   * Sets the value of the 'agentString' field.
   *
   * @param value the value to set.
   */
  public void setAgentString(com.ebay.sojourner.ubd.common.model.AgentHash value) {
    this.agentString = value;
  }

  /**
   * Gets the value of the 'agentStringAfterBase64' field.
   *
   * @return The value of the 'agentStringAfterBase64' field.
   */
  public com.ebay.sojourner.ubd.common.model.AgentHash getAgentStringAfterBase64() {
    return agentStringAfterBase64;
  }

  /**
   * Sets the value of the 'agentStringAfterBase64' field.
   *
   * @param value the value to set.
   */
  public void setAgentStringAfterBase64(com.ebay.sojourner.ubd.common.model.AgentHash value) {
    this.agentStringAfterBase64 = value;
  }

  /**
   * Gets the value of the 'exInternalIp' field.
   *
   * @return The value of the 'exInternalIp' field.
   */
  public java.lang.Integer getExInternalIp() {
    return exInternalIp;
  }

  /**
   * Sets the value of the 'exInternalIp' field.
   *
   * @param value the value to set.
   */
  public void setExInternalIp(java.lang.Integer value) {
    this.exInternalIp = value;
  }

  /**
   * Gets the value of the 'exInternalIpNonTrim' field.
   *
   * @return The value of the 'exInternalIpNonTrim' field.
   */
  public java.lang.Integer getExInternalIpNonTrim() {
    return exInternalIpNonTrim;
  }

  /**
   * Sets the value of the 'exInternalIpNonTrim' field.
   *
   * @param value the value to set.
   */
  public void setExInternalIpNonTrim(java.lang.Integer value) {
    this.exInternalIpNonTrim = value;
  }

  /**
   * Gets the value of the 'appId' field.
   *
   * @return The value of the 'appId' field.
   */
  public java.lang.Integer getAppId() {
    return appId;
  }

  /**
   * Sets the value of the 'appId' field.
   *
   * @param value the value to set.
   */
  public void setAppId(java.lang.Integer value) {
    this.appId = value;
  }

  /**
   * Gets the value of the 'cguid' field.
   *
   * @return The value of the 'cguid' field.
   */
  public com.ebay.sojourner.ubd.common.model.Guid getCguid() {
    return cguid;
  }

  /**
   * Sets the value of the 'cguid' field.
   *
   * @param value the value to set.
   */
  public void setCguid(com.ebay.sojourner.ubd.common.model.Guid value) {
    this.cguid = value;
  }

  /**
   * Gets the value of the 'guid' field.
   *
   * @return The value of the 'guid' field.
   */
  public com.ebay.sojourner.ubd.common.model.Guid getGuid() {
    return guid;
  }

  /**
   * Sets the value of the 'guid' field.
   *
   * @param value the value to set.
   */
  public void setGuid(com.ebay.sojourner.ubd.common.model.Guid value) {
    this.guid = value;
  }

  /**
   * Gets the value of the 'validPageCnt' field.
   *
   * @return The value of the 'validPageCnt' field.
   */
  public java.lang.Integer getValidPageCnt() {
    return validPageCnt;
  }

  /**
   * Sets the value of the 'validPageCnt' field.
   *
   * @param value the value to set.
   */
  public void setValidPageCnt(java.lang.Integer value) {
    this.validPageCnt = value;
  }

  /**
   * Gets the value of the 'sessionStartDt' field.
   *
   * @return The value of the 'sessionStartDt' field.
   */
  public java.lang.Long getSessionStartDt() {
    return sessionStartDt;
  }

  /**
   * Sets the value of the 'sessionStartDt' field.
   *
   * @param value the value to set.
   */
  public void setSessionStartDt(java.lang.Long value) {
    this.sessionStartDt = value;
  }

  @Override
  public void writeExternal(java.io.ObjectOutput out)
      throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @Override
  public void readExternal(java.io.ObjectInput in)
      throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  /**
   * RecordBuilder for SessionCore instances.
   */
  public static class Builder extends
      org.apache.avro.specific.SpecificRecordBuilderBase<SessionCore>
      implements org.apache.avro.data.RecordBuilder<SessionCore> {

    private int botFlag;
    private int absEventCnt;
    private int flags;
    private int distinctGuidsForSameAgentIp;
    private com.ebay.sojourner.ubd.common.model.AgentHash userAgent;
    private com.ebay.sojourner.ubd.common.model.AgentHash.Builder userAgentBuilder;
    private java.lang.Integer ip;
    private com.ebay.sojourner.ubd.common.model.AgentHash agentString;
    private com.ebay.sojourner.ubd.common.model.AgentHash.Builder agentStringBuilder;
    private com.ebay.sojourner.ubd.common.model.AgentHash agentStringAfterBase64;
    private com.ebay.sojourner.ubd.common.model.AgentHash.Builder agentStringAfterBase64Builder;
    private java.lang.Integer exInternalIp;
    private java.lang.Integer exInternalIpNonTrim;
    private java.lang.Integer appId;
    private com.ebay.sojourner.ubd.common.model.Guid cguid;
    private com.ebay.sojourner.ubd.common.model.Guid.Builder cguidBuilder;
    private com.ebay.sojourner.ubd.common.model.Guid guid;
    private com.ebay.sojourner.ubd.common.model.Guid.Builder guidBuilder;
    private java.lang.Integer validPageCnt;
    private java.lang.Long sessionStartDt;

    /**
     * Creates a new Builder
     */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     *
     * @param other The existing Builder to copy.
     */
    private Builder(com.ebay.sojourner.ubd.common.model.SessionCore.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.botFlag)) {
        this.botFlag = data().deepCopy(fields()[0].schema(), other.botFlag);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.absEventCnt)) {
        this.absEventCnt = data().deepCopy(fields()[1].schema(), other.absEventCnt);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.flags)) {
        this.flags = data().deepCopy(fields()[2].schema(), other.flags);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.distinctGuidsForSameAgentIp)) {
        this.distinctGuidsForSameAgentIp = data()
            .deepCopy(fields()[3].schema(), other.distinctGuidsForSameAgentIp);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.userAgent)) {
        this.userAgent = data().deepCopy(fields()[4].schema(), other.userAgent);
        fieldSetFlags()[4] = true;
      }
      if (other.hasUserAgentBuilder()) {
        this.userAgentBuilder = com.ebay.sojourner.ubd.common.model.AgentHash
            .newBuilder(other.getUserAgentBuilder());
      }
      if (isValidValue(fields()[5], other.ip)) {
        this.ip = data().deepCopy(fields()[5].schema(), other.ip);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.agentString)) {
        this.agentString = data().deepCopy(fields()[6].schema(), other.agentString);
        fieldSetFlags()[6] = true;
      }
      if (other.hasAgentStringBuilder()) {
        this.agentStringBuilder = com.ebay.sojourner.ubd.common.model.AgentHash
            .newBuilder(other.getAgentStringBuilder());
      }
      if (isValidValue(fields()[7], other.agentStringAfterBase64)) {
        this.agentStringAfterBase64 = data()
            .deepCopy(fields()[7].schema(), other.agentStringAfterBase64);
        fieldSetFlags()[7] = true;
      }
      if (other.hasAgentStringAfterBase64Builder()) {
        this.agentStringAfterBase64Builder = com.ebay.sojourner.ubd.common.model.AgentHash
            .newBuilder(other.getAgentStringAfterBase64Builder());
      }
      if (isValidValue(fields()[8], other.exInternalIp)) {
        this.exInternalIp = data().deepCopy(fields()[8].schema(), other.exInternalIp);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.exInternalIpNonTrim)) {
        this.exInternalIpNonTrim = data().deepCopy(fields()[9].schema(), other.exInternalIpNonTrim);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.appId)) {
        this.appId = data().deepCopy(fields()[10].schema(), other.appId);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.cguid)) {
        this.cguid = data().deepCopy(fields()[11].schema(), other.cguid);
        fieldSetFlags()[11] = true;
      }
      if (other.hasCguidBuilder()) {
        this.cguidBuilder = com.ebay.sojourner.ubd.common.model.Guid
            .newBuilder(other.getCguidBuilder());
      }
      if (isValidValue(fields()[12], other.guid)) {
        this.guid = data().deepCopy(fields()[12].schema(), other.guid);
        fieldSetFlags()[12] = true;
      }
      if (other.hasGuidBuilder()) {
        this.guidBuilder = com.ebay.sojourner.ubd.common.model.Guid
            .newBuilder(other.getGuidBuilder());
      }
      if (isValidValue(fields()[13], other.validPageCnt)) {
        this.validPageCnt = data().deepCopy(fields()[13].schema(), other.validPageCnt);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.sessionStartDt)) {
        this.sessionStartDt = data().deepCopy(fields()[14].schema(), other.sessionStartDt);
        fieldSetFlags()[14] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing SessionCore instance
     *
     * @param other The existing instance to copy.
     */
    private Builder(com.ebay.sojourner.ubd.common.model.SessionCore other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.botFlag)) {
        this.botFlag = data().deepCopy(fields()[0].schema(), other.botFlag);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.absEventCnt)) {
        this.absEventCnt = data().deepCopy(fields()[1].schema(), other.absEventCnt);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.flags)) {
        this.flags = data().deepCopy(fields()[2].schema(), other.flags);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.distinctGuidsForSameAgentIp)) {
        this.distinctGuidsForSameAgentIp = data()
            .deepCopy(fields()[3].schema(), other.distinctGuidsForSameAgentIp);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.userAgent)) {
        this.userAgent = data().deepCopy(fields()[4].schema(), other.userAgent);
        fieldSetFlags()[4] = true;
      }
      this.userAgentBuilder = null;
      if (isValidValue(fields()[5], other.ip)) {
        this.ip = data().deepCopy(fields()[5].schema(), other.ip);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.agentString)) {
        this.agentString = data().deepCopy(fields()[6].schema(), other.agentString);
        fieldSetFlags()[6] = true;
      }
      this.agentStringBuilder = null;
      if (isValidValue(fields()[7], other.agentStringAfterBase64)) {
        this.agentStringAfterBase64 = data()
            .deepCopy(fields()[7].schema(), other.agentStringAfterBase64);
        fieldSetFlags()[7] = true;
      }
      this.agentStringAfterBase64Builder = null;
      if (isValidValue(fields()[8], other.exInternalIp)) {
        this.exInternalIp = data().deepCopy(fields()[8].schema(), other.exInternalIp);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.exInternalIpNonTrim)) {
        this.exInternalIpNonTrim = data().deepCopy(fields()[9].schema(), other.exInternalIpNonTrim);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.appId)) {
        this.appId = data().deepCopy(fields()[10].schema(), other.appId);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.cguid)) {
        this.cguid = data().deepCopy(fields()[11].schema(), other.cguid);
        fieldSetFlags()[11] = true;
      }
      this.cguidBuilder = null;
      if (isValidValue(fields()[12], other.guid)) {
        this.guid = data().deepCopy(fields()[12].schema(), other.guid);
        fieldSetFlags()[12] = true;
      }
      this.guidBuilder = null;
      if (isValidValue(fields()[13], other.validPageCnt)) {
        this.validPageCnt = data().deepCopy(fields()[13].schema(), other.validPageCnt);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.sessionStartDt)) {
        this.sessionStartDt = data().deepCopy(fields()[14].schema(), other.sessionStartDt);
        fieldSetFlags()[14] = true;
      }
    }

    /**
     * Gets the value of the 'botFlag' field.
     *
     * @return The value.
     */
    public java.lang.Integer getBotFlag() {
      return botFlag;
    }

    /**
     * Sets the value of the 'botFlag' field.
     *
     * @param value The value of 'botFlag'.
     * @return This builder.
     */
    public com.ebay.sojourner.ubd.common.model.SessionCore.Builder setBotFlag(int value) {
      validate(fields()[0], value);
      this.botFlag = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
     * Checks whether the 'botFlag' field has been set.
     *
     * @return True if the 'botFlag' field has been set, false otherwise.
     */
    public boolean hasBotFlag() {
      return fieldSetFlags()[0];
    }


    /**
     * Clears the value of the 'botFlag' field.
     *
     * @return This builder.
     */
    public com.ebay.sojourner.ubd.common.model.SessionCore.Builder clearBotFlag() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
     * Gets the value of the 'absEventCnt' field.
     *
     * @return The value.
     */
    public java.lang.Integer getAbsEventCnt() {
      return absEventCnt;
    }

    /**
     * Sets the value of the 'absEventCnt' field.
     *
     * @param value The value of 'absEventCnt'.
     * @return This builder.
     */
    public com.ebay.sojourner.ubd.common.model.SessionCore.Builder setAbsEventCnt(int value) {
      validate(fields()[1], value);
      this.absEventCnt = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
     * Checks whether the 'absEventCnt' field has been set.
     *
     * @return True if the 'absEventCnt' field has been set, false otherwise.
     */
    public boolean hasAbsEventCnt() {
      return fieldSetFlags()[1];
    }


    /**
     * Clears the value of the 'absEventCnt' field.
     *
     * @return This builder.
     */
    public com.ebay.sojourner.ubd.common.model.SessionCore.Builder clearAbsEventCnt() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
     * Gets the value of the 'flags' field.
     *
     * @return The value.
     */
    public java.lang.Integer getFlags() {
      return flags;
    }

    /**
     * Sets the value of the 'flags' field.
     *
     * @param value The value of 'flags'.
     * @return This builder.
     */
    public com.ebay.sojourner.ubd.common.model.SessionCore.Builder setFlags(int value) {
      validate(fields()[2], value);
      this.flags = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
     * Checks whether the 'flags' field has been set.
     *
     * @return True if the 'flags' field has been set, false otherwise.
     */
    public boolean hasFlags() {
      return fieldSetFlags()[2];
    }


    /**
     * Clears the value of the 'flags' field.
     *
     * @return This builder.
     */
    public com.ebay.sojourner.ubd.common.model.SessionCore.Builder clearFlags() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
     * Gets the value of the 'distinctGuidsForSameAgentIp' field.
     *
     * @return The value.
     */
    public java.lang.Integer getDistinctGuidsForSameAgentIp() {
      return distinctGuidsForSameAgentIp;
    }

    /**
     * Sets the value of the 'distinctGuidsForSameAgentIp' field.
     *
     * @param value The value of 'distinctGuidsForSameAgentIp'.
     * @return This builder.
     */
    public com.ebay.sojourner.ubd.common.model.SessionCore.Builder setDistinctGuidsForSameAgentIp(
        int value) {
      validate(fields()[3], value);
      this.distinctGuidsForSameAgentIp = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
     * Checks whether the 'distinctGuidsForSameAgentIp' field has been set.
     *
     * @return True if the 'distinctGuidsForSameAgentIp' field has been set, false otherwise.
     */
    public boolean hasDistinctGuidsForSameAgentIp() {
      return fieldSetFlags()[3];
    }


    /**
     * Clears the value of the 'distinctGuidsForSameAgentIp' field.
     *
     * @return This builder.
     */
    public com.ebay.sojourner.ubd.common.model.SessionCore.Builder
    clearDistinctGuidsForSameAgentIp() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
     * Gets the value of the 'userAgent' field.
     *
     * @return The value.
     */
    public com.ebay.sojourner.ubd.common.model.AgentHash getUserAgent() {
      return userAgent;
    }

    /**
     * Sets the value of the 'userAgent' field.
     *
     * @param value The value of 'userAgent'.
     * @return This builder.
     */
    public com.ebay.sojourner.ubd.common.model.SessionCore.Builder setUserAgent(
        com.ebay.sojourner.ubd.common.model.AgentHash value) {
      validate(fields()[4], value);
      this.userAgentBuilder = null;
      this.userAgent = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
     * Checks whether the 'userAgent' field has been set.
     *
     * @return True if the 'userAgent' field has been set, false otherwise.
     */
    public boolean hasUserAgent() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'userAgent' field and creates one if it doesn't exist yet.
     *
     * @return This builder.
     */
    public com.ebay.sojourner.ubd.common.model.AgentHash.Builder getUserAgentBuilder() {
      if (userAgentBuilder == null) {
        if (hasUserAgent()) {
          setUserAgentBuilder(com.ebay.sojourner.ubd.common.model.AgentHash.newBuilder(userAgent));
        } else {
          setUserAgentBuilder(com.ebay.sojourner.ubd.common.model.AgentHash.newBuilder());
        }
      }
      return userAgentBuilder;
    }

    /**
     * Sets the Builder instance for the 'userAgent' field
     *
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.ebay.sojourner.ubd.common.model.SessionCore.Builder setUserAgentBuilder(
        com.ebay.sojourner.ubd.common.model.AgentHash.Builder value) {
      clearUserAgent();
      userAgentBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'userAgent' field has an active Builder instance
     *
     * @return True if the 'userAgent' field has an active Builder instance
     */
    public boolean hasUserAgentBuilder() {
      return userAgentBuilder != null;
    }

    /**
     * Clears the value of the 'userAgent' field.
     *
     * @return This builder.
     */
    public com.ebay.sojourner.ubd.common.model.SessionCore.Builder clearUserAgent() {
      userAgent = null;
      userAgentBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
     * Gets the value of the 'ip' field.
     *
     * @return The value.
     */
    public java.lang.Integer getIp() {
      return ip;
    }

    /**
     * Sets the value of the 'ip' field.
     *
     * @param value The value of 'ip'.
     * @return This builder.
     */
    public com.ebay.sojourner.ubd.common.model.SessionCore.Builder setIp(java.lang.Integer value) {
      validate(fields()[5], value);
      this.ip = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
     * Checks whether the 'ip' field has been set.
     *
     * @return True if the 'ip' field has been set, false otherwise.
     */
    public boolean hasIp() {
      return fieldSetFlags()[5];
    }


    /**
     * Clears the value of the 'ip' field.
     *
     * @return This builder.
     */
    public com.ebay.sojourner.ubd.common.model.SessionCore.Builder clearIp() {
      ip = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
     * Gets the value of the 'agentString' field.
     *
     * @return The value.
     */
    public com.ebay.sojourner.ubd.common.model.AgentHash getAgentString() {
      return agentString;
    }

    /**
     * Sets the value of the 'agentString' field.
     *
     * @param value The value of 'agentString'.
     * @return This builder.
     */
    public com.ebay.sojourner.ubd.common.model.SessionCore.Builder setAgentString(
        com.ebay.sojourner.ubd.common.model.AgentHash value) {
      validate(fields()[6], value);
      this.agentStringBuilder = null;
      this.agentString = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
     * Checks whether the 'agentString' field has been set.
     *
     * @return True if the 'agentString' field has been set, false otherwise.
     */
    public boolean hasAgentString() {
      return fieldSetFlags()[6];
    }

    /**
     * Gets the Builder instance for the 'agentString' field and creates one if it doesn't exist
     * yet.
     *
     * @return This builder.
     */
    public com.ebay.sojourner.ubd.common.model.AgentHash.Builder getAgentStringBuilder() {
      if (agentStringBuilder == null) {
        if (hasAgentString()) {
          setAgentStringBuilder(
              com.ebay.sojourner.ubd.common.model.AgentHash.newBuilder(agentString));
        } else {
          setAgentStringBuilder(com.ebay.sojourner.ubd.common.model.AgentHash.newBuilder());
        }
      }
      return agentStringBuilder;
    }

    /**
     * Sets the Builder instance for the 'agentString' field
     *
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.ebay.sojourner.ubd.common.model.SessionCore.Builder setAgentStringBuilder(
        com.ebay.sojourner.ubd.common.model.AgentHash.Builder value) {
      clearAgentString();
      agentStringBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'agentString' field has an active Builder instance
     *
     * @return True if the 'agentString' field has an active Builder instance
     */
    public boolean hasAgentStringBuilder() {
      return agentStringBuilder != null;
    }

    /**
     * Clears the value of the 'agentString' field.
     *
     * @return This builder.
     */
    public com.ebay.sojourner.ubd.common.model.SessionCore.Builder clearAgentString() {
      agentString = null;
      agentStringBuilder = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
     * Gets the value of the 'agentStringAfterBase64' field.
     *
     * @return The value.
     */
    public com.ebay.sojourner.ubd.common.model.AgentHash getAgentStringAfterBase64() {
      return agentStringAfterBase64;
    }

    /**
     * Sets the value of the 'agentStringAfterBase64' field.
     *
     * @param value The value of 'agentStringAfterBase64'.
     * @return This builder.
     */
    public com.ebay.sojourner.ubd.common.model.SessionCore.Builder setAgentStringAfterBase64(
        com.ebay.sojourner.ubd.common.model.AgentHash value) {
      validate(fields()[7], value);
      this.agentStringAfterBase64Builder = null;
      this.agentStringAfterBase64 = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
     * Checks whether the 'agentStringAfterBase64' field has been set.
     *
     * @return True if the 'agentStringAfterBase64' field has been set, false otherwise.
     */
    public boolean hasAgentStringAfterBase64() {
      return fieldSetFlags()[7];
    }

    /**
     * Gets the Builder instance for the 'agentStringAfterBase64' field and creates one if it
     * doesn't exist yet.
     *
     * @return This builder.
     */
    public com.ebay.sojourner.ubd.common.model.AgentHash.Builder
    getAgentStringAfterBase64Builder() {
      if (agentStringAfterBase64Builder == null) {
        if (hasAgentStringAfterBase64()) {
          setAgentStringAfterBase64Builder(
              com.ebay.sojourner.ubd.common.model.AgentHash.newBuilder(agentStringAfterBase64));
        } else {
          setAgentStringAfterBase64Builder(
              com.ebay.sojourner.ubd.common.model.AgentHash.newBuilder());
        }
      }
      return agentStringAfterBase64Builder;
    }

    /**
     * Sets the Builder instance for the 'agentStringAfterBase64' field
     *
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.ebay.sojourner.ubd.common.model.SessionCore.Builder setAgentStringAfterBase64Builder(
        com.ebay.sojourner.ubd.common.model.AgentHash.Builder value) {
      clearAgentStringAfterBase64();
      agentStringAfterBase64Builder = value;
      return this;
    }

    /**
     * Checks whether the 'agentStringAfterBase64' field has an active Builder instance
     *
     * @return True if the 'agentStringAfterBase64' field has an active Builder instance
     */
    public boolean hasAgentStringAfterBase64Builder() {
      return agentStringAfterBase64Builder != null;
    }

    /**
     * Clears the value of the 'agentStringAfterBase64' field.
     *
     * @return This builder.
     */
    public com.ebay.sojourner.ubd.common.model.SessionCore.Builder clearAgentStringAfterBase64() {
      agentStringAfterBase64 = null;
      agentStringAfterBase64Builder = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
     * Gets the value of the 'exInternalIp' field.
     *
     * @return The value.
     */
    public java.lang.Integer getExInternalIp() {
      return exInternalIp;
    }

    /**
     * Sets the value of the 'exInternalIp' field.
     *
     * @param value The value of 'exInternalIp'.
     * @return This builder.
     */
    public com.ebay.sojourner.ubd.common.model.SessionCore.Builder setExInternalIp(
        java.lang.Integer value) {
      validate(fields()[8], value);
      this.exInternalIp = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
     * Checks whether the 'exInternalIp' field has been set.
     *
     * @return True if the 'exInternalIp' field has been set, false otherwise.
     */
    public boolean hasExInternalIp() {
      return fieldSetFlags()[8];
    }


    /**
     * Clears the value of the 'exInternalIp' field.
     *
     * @return This builder.
     */
    public com.ebay.sojourner.ubd.common.model.SessionCore.Builder clearExInternalIp() {
      exInternalIp = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
     * Gets the value of the 'exInternalIpNonTrim' field.
     *
     * @return The value.
     */
    public java.lang.Integer getExInternalIpNonTrim() {
      return exInternalIpNonTrim;
    }

    /**
     * Sets the value of the 'exInternalIpNonTrim' field.
     *
     * @param value The value of 'exInternalIpNonTrim'.
     * @return This builder.
     */
    public com.ebay.sojourner.ubd.common.model.SessionCore.Builder setExInternalIpNonTrim(
        java.lang.Integer value) {
      validate(fields()[9], value);
      this.exInternalIpNonTrim = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
     * Checks whether the 'exInternalIpNonTrim' field has been set.
     *
     * @return True if the 'exInternalIpNonTrim' field has been set, false otherwise.
     */
    public boolean hasExInternalIpNonTrim() {
      return fieldSetFlags()[9];
    }


    /**
     * Clears the value of the 'exInternalIpNonTrim' field.
     *
     * @return This builder.
     */
    public com.ebay.sojourner.ubd.common.model.SessionCore.Builder clearExInternalIpNonTrim() {
      exInternalIpNonTrim = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
     * Gets the value of the 'appId' field.
     *
     * @return The value.
     */
    public java.lang.Integer getAppId() {
      return appId;
    }

    /**
     * Sets the value of the 'appId' field.
     *
     * @param value The value of 'appId'.
     * @return This builder.
     */
    public com.ebay.sojourner.ubd.common.model.SessionCore.Builder setAppId(
        java.lang.Integer value) {
      validate(fields()[10], value);
      this.appId = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
     * Checks whether the 'appId' field has been set.
     *
     * @return True if the 'appId' field has been set, false otherwise.
     */
    public boolean hasAppId() {
      return fieldSetFlags()[10];
    }


    /**
     * Clears the value of the 'appId' field.
     *
     * @return This builder.
     */
    public com.ebay.sojourner.ubd.common.model.SessionCore.Builder clearAppId() {
      appId = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
     * Gets the value of the 'cguid' field.
     *
     * @return The value.
     */
    public com.ebay.sojourner.ubd.common.model.Guid getCguid() {
      return cguid;
    }

    /**
     * Sets the value of the 'cguid' field.
     *
     * @param value The value of 'cguid'.
     * @return This builder.
     */
    public com.ebay.sojourner.ubd.common.model.SessionCore.Builder setCguid(
        com.ebay.sojourner.ubd.common.model.Guid value) {
      validate(fields()[11], value);
      this.cguidBuilder = null;
      this.cguid = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
     * Checks whether the 'cguid' field has been set.
     *
     * @return True if the 'cguid' field has been set, false otherwise.
     */
    public boolean hasCguid() {
      return fieldSetFlags()[11];
    }

    /**
     * Gets the Builder instance for the 'cguid' field and creates one if it doesn't exist yet.
     *
     * @return This builder.
     */
    public com.ebay.sojourner.ubd.common.model.Guid.Builder getCguidBuilder() {
      if (cguidBuilder == null) {
        if (hasCguid()) {
          setCguidBuilder(com.ebay.sojourner.ubd.common.model.Guid.newBuilder(cguid));
        } else {
          setCguidBuilder(com.ebay.sojourner.ubd.common.model.Guid.newBuilder());
        }
      }
      return cguidBuilder;
    }

    /**
     * Sets the Builder instance for the 'cguid' field
     *
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.ebay.sojourner.ubd.common.model.SessionCore.Builder setCguidBuilder(
        com.ebay.sojourner.ubd.common.model.Guid.Builder value) {
      clearCguid();
      cguidBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'cguid' field has an active Builder instance
     *
     * @return True if the 'cguid' field has an active Builder instance
     */
    public boolean hasCguidBuilder() {
      return cguidBuilder != null;
    }

    /**
     * Clears the value of the 'cguid' field.
     *
     * @return This builder.
     */
    public com.ebay.sojourner.ubd.common.model.SessionCore.Builder clearCguid() {
      cguid = null;
      cguidBuilder = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
     * Gets the value of the 'guid' field.
     *
     * @return The value.
     */
    public com.ebay.sojourner.ubd.common.model.Guid getGuid() {
      return guid;
    }

    /**
     * Sets the value of the 'guid' field.
     *
     * @param value The value of 'guid'.
     * @return This builder.
     */
    public com.ebay.sojourner.ubd.common.model.SessionCore.Builder setGuid(
        com.ebay.sojourner.ubd.common.model.Guid value) {
      validate(fields()[12], value);
      this.guidBuilder = null;
      this.guid = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
     * Checks whether the 'guid' field has been set.
     *
     * @return True if the 'guid' field has been set, false otherwise.
     */
    public boolean hasGuid() {
      return fieldSetFlags()[12];
    }

    /**
     * Gets the Builder instance for the 'guid' field and creates one if it doesn't exist yet.
     *
     * @return This builder.
     */
    public com.ebay.sojourner.ubd.common.model.Guid.Builder getGuidBuilder() {
      if (guidBuilder == null) {
        if (hasGuid()) {
          setGuidBuilder(com.ebay.sojourner.ubd.common.model.Guid.newBuilder(guid));
        } else {
          setGuidBuilder(com.ebay.sojourner.ubd.common.model.Guid.newBuilder());
        }
      }
      return guidBuilder;
    }

    /**
     * Sets the Builder instance for the 'guid' field
     *
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.ebay.sojourner.ubd.common.model.SessionCore.Builder setGuidBuilder(
        com.ebay.sojourner.ubd.common.model.Guid.Builder value) {
      clearGuid();
      guidBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'guid' field has an active Builder instance
     *
     * @return True if the 'guid' field has an active Builder instance
     */
    public boolean hasGuidBuilder() {
      return guidBuilder != null;
    }

    /**
     * Clears the value of the 'guid' field.
     *
     * @return This builder.
     */
    public com.ebay.sojourner.ubd.common.model.SessionCore.Builder clearGuid() {
      guid = null;
      guidBuilder = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
     * Gets the value of the 'validPageCnt' field.
     *
     * @return The value.
     */
    public java.lang.Integer getValidPageCnt() {
      return validPageCnt;
    }

    /**
     * Sets the value of the 'validPageCnt' field.
     *
     * @param value The value of 'validPageCnt'.
     * @return This builder.
     */
    public com.ebay.sojourner.ubd.common.model.SessionCore.Builder setValidPageCnt(
        java.lang.Integer value) {
      validate(fields()[13], value);
      this.validPageCnt = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
     * Checks whether the 'validPageCnt' field has been set.
     *
     * @return True if the 'validPageCnt' field has been set, false otherwise.
     */
    public boolean hasValidPageCnt() {
      return fieldSetFlags()[13];
    }


    /**
     * Clears the value of the 'validPageCnt' field.
     *
     * @return This builder.
     */
    public com.ebay.sojourner.ubd.common.model.SessionCore.Builder clearValidPageCnt() {
      validPageCnt = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
     * Gets the value of the 'sessionStartDt' field.
     *
     * @return The value.
     */
    public java.lang.Long getSessionStartDt() {
      return sessionStartDt;
    }

    /**
     * Sets the value of the 'sessionStartDt' field.
     *
     * @param value The value of 'sessionStartDt'.
     * @return This builder.
     */
    public com.ebay.sojourner.ubd.common.model.SessionCore.Builder setSessionStartDt(
        java.lang.Long value) {
      validate(fields()[14], value);
      this.sessionStartDt = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
     * Checks whether the 'sessionStartDt' field has been set.
     *
     * @return True if the 'sessionStartDt' field has been set, false otherwise.
     */
    public boolean hasSessionStartDt() {
      return fieldSetFlags()[14];
    }


    /**
     * Clears the value of the 'sessionStartDt' field.
     *
     * @return This builder.
     */
    public com.ebay.sojourner.ubd.common.model.SessionCore.Builder clearSessionStartDt() {
      sessionStartDt = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public SessionCore build() {
      try {
        SessionCore record = new SessionCore();
        record.botFlag =
            fieldSetFlags()[0] ? this.botFlag : (java.lang.Integer) defaultValue(fields()[0]);
        record.absEventCnt =
            fieldSetFlags()[1] ? this.absEventCnt : (java.lang.Integer) defaultValue(fields()[1]);
        record.flags =
            fieldSetFlags()[2] ? this.flags : (java.lang.Integer) defaultValue(fields()[2]);
        record.distinctGuidsForSameAgentIp = fieldSetFlags()[3] ? this.distinctGuidsForSameAgentIp
            : (java.lang.Integer) defaultValue(fields()[3]);
        if (userAgentBuilder != null) {
          record.userAgent = this.userAgentBuilder.build();
        } else {
          record.userAgent = fieldSetFlags()[4] ? this.userAgent
              : (com.ebay.sojourner.ubd.common.model.AgentHash) defaultValue(fields()[4]);
        }
        record.ip = fieldSetFlags()[5] ? this.ip : (java.lang.Integer) defaultValue(fields()[5]);
        if (agentStringBuilder != null) {
          record.agentString = this.agentStringBuilder.build();
        } else {
          record.agentString = fieldSetFlags()[6] ? this.agentString
              : (com.ebay.sojourner.ubd.common.model.AgentHash) defaultValue(fields()[6]);
        }
        if (agentStringAfterBase64Builder != null) {
          record.agentStringAfterBase64 = this.agentStringAfterBase64Builder.build();
        } else {
          record.agentStringAfterBase64 = fieldSetFlags()[7] ? this.agentStringAfterBase64
              : (com.ebay.sojourner.ubd.common.model.AgentHash) defaultValue(fields()[7]);
        }
        record.exInternalIp =
            fieldSetFlags()[8] ? this.exInternalIp : (java.lang.Integer) defaultValue(fields()[8]);
        record.exInternalIpNonTrim = fieldSetFlags()[9] ? this.exInternalIpNonTrim
            : (java.lang.Integer) defaultValue(fields()[9]);
        record.appId =
            fieldSetFlags()[10] ? this.appId : (java.lang.Integer) defaultValue(fields()[10]);
        if (cguidBuilder != null) {
          record.cguid = this.cguidBuilder.build();
        } else {
          record.cguid = fieldSetFlags()[11] ? this.cguid
              : (com.ebay.sojourner.ubd.common.model.Guid) defaultValue(fields()[11]);
        }
        if (guidBuilder != null) {
          record.guid = this.guidBuilder.build();
        } else {
          record.guid = fieldSetFlags()[12] ? this.guid
              : (com.ebay.sojourner.ubd.common.model.Guid) defaultValue(fields()[12]);
        }
        record.validPageCnt = fieldSetFlags()[13] ? this.validPageCnt
            : (java.lang.Integer) defaultValue(fields()[13]);
        record.sessionStartDt =
            fieldSetFlags()[14] ? this.sessionStartDt : (java.lang.Long) defaultValue(fields()[14]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

}
