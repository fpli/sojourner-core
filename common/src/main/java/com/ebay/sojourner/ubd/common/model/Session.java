/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ebay.sojourner.ubd.common.model;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Session extends org.apache.avro.specific.SpecificRecordBase implements
    org.apache.avro.specific.SpecificRecord {

  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse(
      "{\"type\":\"record\",\"name\":\"Session\",\"namespace\":\"com.ebay.sojourner.ubd.common.model\",\"fields\":[{\"name\":\"rheosHeader\",\"type\":{\"type\":\"record\",\"name\":\"RheosHeader\",\"fields\":[{\"name\":\"eventCreateTimestamp\",\"type\":\"long\"},{\"name\":\"eventSentTimestamp\",\"type\":\"long\"},{\"name\":\"schemaId\",\"type\":\"int\"},{\"name\":\"eventId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"producerId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]},\"doc\":\"Rheos header\"},{\"name\":\"guid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"map from tag g\"}]}");
  /**
   * Rheos header
   */
  @Deprecated
  public com.ebay.sojourner.ubd.common.model.RheosHeader rheosHeader;
  /**
   * map from tag g
   */
  @Deprecated
  public java.lang.String guid;

  /**
   * Default constructor.  Note that this does not initialize fields to their default values from
   * the schema.  If that is desired then one should use <code>newBuilder()</code>.
   */
  public Session() {
  }

  /**
   * All-args constructor.
   */
  public Session(com.ebay.sojourner.ubd.common.model.RheosHeader rheosHeader,
      java.lang.String guid) {
    this.rheosHeader = rheosHeader;
    this.guid = guid;
  }

  public static org.apache.avro.Schema getClassSchema() {
    return SCHEMA$;
  }

  /**
   * Creates a new Session RecordBuilder
   */
  public static com.ebay.sojourner.ubd.common.model.Session.Builder newBuilder() {
    return new com.ebay.sojourner.ubd.common.model.Session.Builder();
  }

  /**
   * Creates a new Session RecordBuilder by copying an existing Builder
   */
  public static com.ebay.sojourner.ubd.common.model.Session.Builder newBuilder(
      com.ebay.sojourner.ubd.common.model.Session.Builder other) {
    return new com.ebay.sojourner.ubd.common.model.Session.Builder(other);
  }

  /**
   * Creates a new Session RecordBuilder by copying an existing Session instance
   */
  public static com.ebay.sojourner.ubd.common.model.Session.Builder newBuilder(
      com.ebay.sojourner.ubd.common.model.Session other) {
    return new com.ebay.sojourner.ubd.common.model.Session.Builder(other);
  }

  public org.apache.avro.Schema getSchema() {
    return SCHEMA$;
  }

  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
      case 0:
        return rheosHeader;
      case 1:
        return guid;
      default:
        throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value = "unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
      case 0:
        rheosHeader = (com.ebay.sojourner.ubd.common.model.RheosHeader) value$;
        break;
      case 1:
        guid = (java.lang.String) value$;
        break;
      default:
        throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'rheosHeader' field. Rheos header
   */
  public com.ebay.sojourner.ubd.common.model.RheosHeader getRheosHeader() {
    return rheosHeader;
  }

  /**
   * Sets the value of the 'rheosHeader' field. Rheos header   * @param value the value to set.
   */
  public void setRheosHeader(com.ebay.sojourner.ubd.common.model.RheosHeader value) {
    this.rheosHeader = value;
  }

  /**
   * Gets the value of the 'guid' field. map from tag g
   */
  public java.lang.String getGuid() {
    return guid;
  }

  /**
   * Sets the value of the 'guid' field. map from tag g   * @param value the value to set.
   */
  public void setGuid(java.lang.String value) {
    this.guid = value;
  }

  /**
   * RecordBuilder for Session instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Session>
      implements org.apache.avro.data.RecordBuilder<Session> {

    private com.ebay.sojourner.ubd.common.model.RheosHeader rheosHeader;
    private java.lang.String guid;

    /**
     * Creates a new Builder
     */
    private Builder() {
      super(com.ebay.sojourner.ubd.common.model.Session.SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder
     */
    private Builder(com.ebay.sojourner.ubd.common.model.Session.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.rheosHeader)) {
        this.rheosHeader = data().deepCopy(fields()[0].schema(), other.rheosHeader);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.guid)) {
        this.guid = data().deepCopy(fields()[1].schema(), other.guid);
        fieldSetFlags()[1] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Session instance
     */
    private Builder(com.ebay.sojourner.ubd.common.model.Session other) {
      super(com.ebay.sojourner.ubd.common.model.Session.SCHEMA$);
      if (isValidValue(fields()[0], other.rheosHeader)) {
        this.rheosHeader = data().deepCopy(fields()[0].schema(), other.rheosHeader);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.guid)) {
        this.guid = data().deepCopy(fields()[1].schema(), other.guid);
        fieldSetFlags()[1] = true;
      }
    }

    /**
     * Gets the value of the 'rheosHeader' field
     */
    public com.ebay.sojourner.ubd.common.model.RheosHeader getRheosHeader() {
      return rheosHeader;
    }

    /**
     * Sets the value of the 'rheosHeader' field
     */
    public com.ebay.sojourner.ubd.common.model.Session.Builder setRheosHeader(
        com.ebay.sojourner.ubd.common.model.RheosHeader value) {
      validate(fields()[0], value);
      this.rheosHeader = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
     * Checks whether the 'rheosHeader' field has been set
     */
    public boolean hasRheosHeader() {
      return fieldSetFlags()[0];
    }

    /**
     * Clears the value of the 'rheosHeader' field
     */
    public com.ebay.sojourner.ubd.common.model.Session.Builder clearRheosHeader() {
      rheosHeader = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
     * Gets the value of the 'guid' field
     */
    public java.lang.String getGuid() {
      return guid;
    }

    /**
     * Sets the value of the 'guid' field
     */
    public com.ebay.sojourner.ubd.common.model.Session.Builder setGuid(java.lang.String value) {
      validate(fields()[1], value);
      this.guid = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
     * Checks whether the 'guid' field has been set
     */
    public boolean hasGuid() {
      return fieldSetFlags()[1];
    }

    /**
     * Clears the value of the 'guid' field
     */
    public com.ebay.sojourner.ubd.common.model.Session.Builder clearGuid() {
      guid = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public Session build() {
      try {
        Session record = new Session();
        record.rheosHeader = fieldSetFlags()[0] ? this.rheosHeader
            : (com.ebay.sojourner.ubd.common.model.RheosHeader) defaultValue(fields()[0]);
        record.guid = fieldSetFlags()[1] ? this.guid : (java.lang.String) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
